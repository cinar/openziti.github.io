"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[8545],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=o,g=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return n?r.createElement(g,i(i({ref:t},c),{},{components:n})):r.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},53351:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>l,metadata:()=>u,toc:()=>p});var r=n(87462),o=(n(67294),n(3905)),a=(n(65488),n(85162),n(57319),n(20476)),i=n(47653);const l={id:"deployment",title:"Router Deployment"},s=void 0,u={unversionedId:"router/deployment",id:"router/deployment",title:"Router Deployment",description:"The Ziti Router is the entry point for Ziti-based clients. It is responsible for authenticating incoming connections by",source:"@site/docs-ops/02-router/01-deployment.md",sourceDirName:"02-router",slug:"/router/deployment",permalink:"/operations/router/deployment",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"deployment",title:"Router Deployment"},sidebar:"rootSidebar",previous:{title:"Controller",permalink:"/operations/controller"},next:{title:"Config Examples",permalink:"/operations/router/router-configuration"}},c={},p=[{value:"Deployment",id:"deployment",level:2},{value:"Process of Deployment",id:"process-of-deployment",level:2},{value:"Download Binaries",id:"download-binaries",level:3},{value:"Create Config File",id:"router-config-file",level:3},{value:"Create Router",id:"router-create",level:3},{value:"Enroll Router",id:"enrollment",level:3},{value:"Run Router",id:"router-run",level:3},{value:"Manage Router",id:"router-update",level:3},{value:"Configure Logging",id:"configure-logging",level:3}],m={toc:p};function d(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The Ziti Router is the entry point for Ziti-based clients. It is responsible for authenticating incoming connections by\nverifying the connecting client has a valid network session.  It also routes traffic to whatever the\ndestination is for the given service. In simple deployments can have a single router as is the case\nwith the ",(0,o.kt)("a",{parentName:"p",href:"/docs/quickstarts/network/"},"Ziti Network Quickstart"),"."),(0,o.kt)("h2",{id:"deployment"},"Deployment"),(0,o.kt)("p",null,"This article describes the process of deploying a router. It covers what attributes can be updated, removed, and added after the deployment is completed."),(0,o.kt)("admonition",{title:"Notes",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The life cycle of a router does not allow for the advertised, external DNS name or IP address to change. A new router must be created.")),(0,o.kt)("h2",{id:"process-of-deployment"},"Process of Deployment"),(0,o.kt)("p",null,"It is advisable to generate private keys on the same host where they'll be used. This minimizes the risk of losing custody of the private key material."),(0,o.kt)("admonition",{title:"Note",type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Ensure you are logged in for managing routers with the CLI"),(0,o.kt)(a.ZP,{mdxType:"CliLogin"})),(0,o.kt)("h3",{id:"download-binaries"},"Download Binaries"),(0,o.kt)("p",null,"You will need the ",(0,o.kt)("inlineCode",{parentName:"p"},"ziti-router")," executable from ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/openziti/ziti/releases/latest"},"OpenZiti Releases"),"."),(0,o.kt)("h3",{id:"router-config-file"},"Create Config File"),(0,o.kt)("p",null,"The router loads its configuration from a YAML file. You may use the ",(0,o.kt)("inlineCode",{parentName:"p"},"ziti create config router")," command to generate a config file, influencing the contents with options and variables. Here are ",(0,o.kt)("a",{parentName:"p",href:"/operations/router/router-configuration"},"some practical examples representing common deployment scenarios"),"."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"identity.key")," field in the config behaves differently for routers. If a file exists in the path indicated by ",(0,o.kt)("inlineCode",{parentName:"p"},"key")," then the key will be used during router enrollment. If it does not exist then a unique key will be generated."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'identity:\n    cert:                 "~/.ziti/config/certs/router01.zitinetwork.example.org.cert"\n    server_cert:          "~/.ziti/config/certs/router01.zitinetwork.example.org.server.chain.cert"\n    key:                  "~/.ziti/config/certs/router01.zitinetwork.example.org.key"\n    ca:                   "~/.ziti/config/certs/router01.zitinetwork.example.org.cas"\n')),(0,o.kt)("h3",{id:"router-create"},"Create Router"),(0,o.kt)("p",null,"The life cycle of a router begins by calling the controller's management API to create a router. You can do this with ",(0,o.kt)("a",{parentName:"p",href:"/api/rest"},"the REST API")," or ",(0,o.kt)("a",{parentName:"p",href:"/operations/router/cli-mgmt#create-router"},"the ",(0,o.kt)("inlineCode",{parentName:"a"},"ziti")," CLI"),"."),(0,o.kt)("h3",{id:"enrollment"},"Enroll Router"),(0,o.kt)("p",null,"Creating a router yields a one-time enrollment token that you may store as a JWT file. Enrollment consumes the token and facilitates issuing a client certificate for the router, establishing cryptographic trust with the controller."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ziti-router enroll config.yaml --jwt token.jwt\n")),(0,o.kt)("h3",{id:"router-run"},"Run Router"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ziti-router run config.yaml\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ini"},"# /etc/systemd/system/ziti-router.service\n[Unit]\nDescription=Ziti Router\nAfter=network.target\n\n[Service]\nUser=root\nWorkingDirectory=/etc/openziti/router\nExecStart=/usr/local/sbin/ziti-router run /etc/openziti/router/config.yml --log-formatter pfxlog\nRestart=always\nRestartSec=2\nLimitNOFILE=65536\n\n[Install]\nWantedBy=multi-user.target\n")),(0,o.kt)("h3",{id:"router-update"},"Manage Router"),(0,o.kt)("p",null,"You can manage a router's role attributes, tags, etc. with ",(0,o.kt)("a",{parentName:"p",href:"/api/rest"},"the REST API")," or ",(0,o.kt)("a",{parentName:"p",href:"/operations/router/cli-mgmt#managing-routers-with-the-cli"},"the ",(0,o.kt)("inlineCode",{parentName:"a"},"ziti")," CLI")," for more details"),(0,o.kt)("h3",{id:"configure-logging"},"Configure Logging"),(0,o.kt)(i.ZP,{mdxType:"CliLogFormats"}))}d.isMDXComponent=!0},85162:(e,t,n)=>{n.d(t,{Z:()=>i});var r=n(67294),o=n(86010);const a="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return r.createElement("div",{role:"tabpanel",className:(0,o.Z)(a,i),hidden:n},t)}},65488:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(87462),o=n(67294),a=n(86010),i=n(72389),l=n(67392),s=n(7094),u=n(12466);const c="tabList__CuJ",p="tabItem_LNqP";function m(e){const{lazy:t,block:n,defaultValue:i,values:m,groupId:d,className:g}=e,f=o.Children.map(e.children,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=m??f.map((e=>{let{props:{value:t,label:n,attributes:r}}=e;return{value:t,label:n,attributes:r}})),y=(0,l.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const k=null===i?i:i??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==k&&!h.some((e=>e.value===k)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${k}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:v}=(0,s.U)(),[N,w]=(0,o.useState)(k),C=[],{blockElementScrollPositionUntilNextRender:T}=(0,u.o5)();if(null!=d){const e=b[d];null!=e&&e!==N&&h.some((t=>t.value===e))&&w(e)}const x=e=>{const t=e.currentTarget,n=C.indexOf(t),r=h[n].value;r!==N&&(T(t),w(r),null!=d&&v(d,String(r)))},E=e=>{let t=null;switch(e.key){case"Enter":x(e);break;case"ArrowRight":{const n=C.indexOf(e.currentTarget)+1;t=C[n]??C[0];break}case"ArrowLeft":{const n=C.indexOf(e.currentTarget)-1;t=C[n]??C[C.length-1];break}}t?.focus()};return o.createElement("div",{className:(0,a.Z)("tabs-container",c)},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.Z)("tabs",{"tabs--block":n},g)},h.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,r.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>C.push(e),onKeyDown:E,onClick:x},i,{className:(0,a.Z)("tabs__item",p,i?.className,{"tabs__item--active":N===t})}),n??t)}))),t?(0,o.cloneElement)(f.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):o.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function d(e){const t=(0,i.Z)();return o.createElement(m,(0,r.Z)({key:String(t)},e))}},47653:(e,t,n)=>{n.d(t,{ZP:()=>s});var r=n(87462),o=(n(67294),n(3905)),a=n(65488),i=n(85162);const l={toc:[]};function s(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"All Ziti components log to standard output and standard error file descriptors."),(0,o.kt)(a.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"goformats",label:"Log Formats",mdxType:"TabItem"},(0,o.kt)("p",null,"Output from Ziti components comes in three distinct styles. Choose the style of logging that is right for you."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pfxlog")," - a human-readable format leveraging ascii escape codes to display colorized log level"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"json")," - a machine-readable format targeting automated processes for log aggregation/searching"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"text")," - a human-readable format using plain text (no ascii escape codes)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ziti-router run ./router.yml --log-formatter pfxlog\n"))),(0,o.kt)(i.Z,{value:"golevels",label:"Log Levels",mdxType:"TabItem"},(0,o.kt)("p",null,"By default the Ziti components will log at the ",(0,o.kt)("inlineCode",{parentName:"p"},"INFO")," level. This means that log messages ",(0,o.kt)("inlineCode",{parentName:"p"},"INFO"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"WARNING"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"ERROR"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"FATAL")," will all be emitted. Ziti components all support verbose logging by adding ",(0,o.kt)("inlineCode",{parentName:"p"},"--verbose or -v")," to the command being executed. Verbose mode will add ",(0,o.kt)("inlineCode",{parentName:"p"},"DEBUG")," log messages."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ziti-controller run ./ctrl.yml --verbose\n")))))}s.isMDXComponent=!0},20476:(e,t,n)=>{n.d(t,{ZP:()=>i});var r=n(87462),o=(n(67294),n(3905));const a={toc:[]};function i(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("br",null),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"ziti")," CLI will help you get a session from the controller's management API. You will be prompted to trust any new server certificates. Your session cache and trust store are managed by the CLI in your home directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# implies https://localhost:1280\nziti edge login -u admin -p admin\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# implies https://\nziti edge login ziti.example.com:8441 -u admin -p admin\n")))}i.isMDXComponent=!0},57319:()=>{}}]);