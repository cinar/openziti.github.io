"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[9210],{3905:(t,e,r)=>{r.d(e,{Zo:()=>d,kt:()=>k});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function l(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?l(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},l=Object.keys(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)r=l[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var s=a.createContext({}),m=function(t){var e=a.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},d=function(t){var e=m(t.components);return a.createElement(s.Provider,{value:e},t.children)},u="mdxType",p={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},g=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,l=t.originalType,s=t.parentName,d=o(t,["components","mdxType","originalType","parentName"]),u=m(r),g=n,k=u["".concat(s,".").concat(g)]||u[g]||p[g]||l;return r?a.createElement(k,i(i({ref:e},d),{},{components:r})):a.createElement(k,i({ref:e},d))}));function k(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var l=r.length,i=new Array(l);i[0]=g;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o[u]="string"==typeof t?t:n,i[1]=o;for(var m=2;m<l;m++)i[m]=r[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}g.displayName="MDXCreateElement"},15229:(t,e,r)=>{r.r(e),r.d(e,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>m});var a=r(87462),n=(r(67294),r(3905));const l={},i="Available Metrics",o={unversionedId:"learn/core-concepts/metrics/available-metrics",id:"learn/core-concepts/metrics/available-metrics",title:"Available Metrics",description:"Metrics are reported to the log files, locale in /var/log/ziti by default.  There are 2 primary log files for metrics, utilization-metrics.log and utilization-usage.log.  These logs may be shipped to various reporting systems for easier visibility and monitoring.",source:"@site/docs/learn/core-concepts/metrics/15-available-metrics.md",sourceDirName:"learn/core-concepts/metrics",slug:"/learn/core-concepts/metrics/available-metrics",permalink:"/docs/learn/core-concepts/metrics/available-metrics",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/metrics/15-available-metrics.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{},sidebar:"docsSidebar",previous:{title:"Types",permalink:"/docs/learn/core-concepts/metrics/types"},next:{title:"File Reporter",permalink:"/docs/learn/core-concepts/metrics/file"}},s={},m=[],d={toc:m};function u(t){let{components:e,...r}=t;return(0,n.kt)("wrapper",(0,a.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"available-metrics"},"Available Metrics"),(0,n.kt)("p",null,"Metrics are reported to the log files, locale in /var/log/ziti by default.  There are 2 primary log files for metrics, utilization-metrics.log and utilization-usage.log.  These logs may be shipped to various reporting systems for easier visibility and monitoring."),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:null},"Metric"),(0,n.kt)("th",{parentName:"tr",align:null},"Type"),(0,n.kt)("th",{parentName:"tr",align:null},"Source"),(0,n.kt)("th",{parentName:"tr",align:null},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"api-session.create"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Time to create api sessions")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"api.session.enforcer.run"),(0,n.kt)("td",{parentName:"tr",align:null},"Timer"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"How long it takes the api session policy enforcer to run")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"bolt.open_read_txs"),(0,n.kt)("td",{parentName:"tr",align:null},"Gauge"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Current number of open bbolt read transactions")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ctrl.latency"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per control channel latency")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ctrl.queue_time"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per control channel queue time (between send and write to wire)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ctrl.rx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per control channel receive data rate")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ctrl.rx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per control channel receive message rate")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ctrl.rx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per control channel receive message size distribution")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ctrl.tx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per control channel send data rate")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ctrl.tx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per control channel send message rate")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ctrl.tx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per control channel send messsage size distribution")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"edge.invalid_api_tokens"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of invalid api session token encountered")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"edge.invalid_api_tokens_during_sync"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of invalid api session token encountered while a sync is in progress")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"egress.rx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Data rate of data received via xgress, originating from terminators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"egress.rx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message rate of data received via xgress, originating from terminators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"egress.rx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message size distribution of data received via xgress, originating from terminators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"egress.tx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Data rate of data sent via xgress originating from terminators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"egress.tx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message rate of data sent via xgress originating from terminators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"egress.tx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message size distribution of data sent via xgress, originating from terminators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"eventual.events"),(0,n.kt)("td",{parentName:"tr",align:null},"Gauge"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of background events pending processing")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"fabric.rx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Data rate of data received from fabric links")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"fabric.rx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message rate of data received from fabric links")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"fabric.rx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message size distribution of data received from fabric links")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"fabric.tx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Data rate of data sent on fabric links")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"fabric.tx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message rate of data sent on fabric links")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"fabric.tx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message size distribution of data sent on fabric links")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"identity.refresh"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"How often an identity is marked, indicating that they need a full refresh of their service list")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"identity.update-sdk-info"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Time to update identity sdk info")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ingress.rx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Data rate of data received via xgress, originating from initiators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ingress.rx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message rate of data received via xgress, originating from initiators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ingress.rx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message size distribution of data received via xgress, originating from initiators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ingress.tx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Data rate of data sent via xgress originating from initiators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ingress.tx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message rate of data sent via xgress originating from initiators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"ingress.tx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Message size distribution of data sent via xgress, originating from initiators. Per router.")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"link.latency"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per link latency in nanoseconds")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"link.queue_time"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per link queue time (between send and write to wire)")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"link.rx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per link receive data rate")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"link.rx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per link receive message rate")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"link.rx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per link receive message size distribution")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"link.tx.bytesrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per link send data rate")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"link.tx.msgrate"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per link send message rate")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"link.tx.msgsize"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Per link send messsage size distribution")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"service.policy.enforcer.run"),(0,n.kt)("td",{parentName:"tr",align:null},"Timer"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"How long it takes the service policy enforcer to run")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"service.policy.enforcer.run.deletes"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"How many sessions are deleted by the service policy enforcer")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"services.list"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Time to list services")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"session.create"),(0,n.kt)("td",{parentName:"tr",align:null},"Histogram"),(0,n.kt)("td",{parentName:"tr",align:null},"controller"),(0,n.kt)("td",{parentName:"tr",align:null},"Time to create a session")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.ack_duplicates"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of duplicate acks received. Indicates over-eager retransmission")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.ack_failures"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of failures sending acks")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.acks.queue_size"),(0,n.kt)("td",{parentName:"tr",align:null},"Gauge"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of acks queued to send")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.blocked_by_local_window"),(0,n.kt)("td",{parentName:"tr",align:null},"Gauge"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of xgress instances blocked because the windowing threshold has been exceeded locally")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.blocked_by_remote_window"),(0,n.kt)("td",{parentName:"tr",align:null},"Gauge"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of xgress instances blocked because the windowing threshold has been exceeded remotely")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.dropped_payloads"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of payloads dropped because the xgress receiver side couldn't keep up")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.retransmission_failures"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of retransmission send failures")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.retransmissions"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of payloads retransmitted")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.retransmits.queue_size"),(0,n.kt)("td",{parentName:"tr",align:null},"Gauge"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of payloads queued for retransmission")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.rx.acks"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of acks received")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.tx.acks"),(0,n.kt)("td",{parentName:"tr",align:null},"Meter"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of acks sent")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.tx_unacked_payload_bytes"),(0,n.kt)("td",{parentName:"tr",align:null},"Gauge"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Total payload data size that has been buffered but not acked yet")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.tx_unacked_payloads"),(0,n.kt)("td",{parentName:"tr",align:null},"Gauge"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Number of payload messages that have been buffered but not yet acked")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:null},"xgress.tx_write_time"),(0,n.kt)("td",{parentName:"tr",align:null},"Timer"),(0,n.kt)("td",{parentName:"tr",align:null},"router"),(0,n.kt)("td",{parentName:"tr",align:null},"Time to write payloads to the xgress receiver")))))}u.isMDXComponent=!0}}]);