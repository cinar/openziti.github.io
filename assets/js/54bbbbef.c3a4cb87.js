"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[5895],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||l;return n?a.createElement(g,r(r({ref:t},u),{},{components:n})):a.createElement(g,r({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:i,r[1]=o;for(var p=2;p<l;p++)r[p]=n[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>r});var a=n(7294),i=n(6010);const l="tabItem_Ymn6";function r(e){let{children:t,hidden:n,className:r}=e;return a.createElement("div",{role:"tabpanel",className:(0,i.Z)(l,r),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),i=n(7294),l=n(6010),r=n(2389),o=n(7392),s=n(7094),p=n(2466);const u="tabList__CuJ",c="tabItem_LNqP";function d(e){var t;const{lazy:n,block:r,defaultValue:d,values:m,groupId:g,className:h}=e,k=i.Children.map(e.children,(e=>{if((0,i.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=m??k.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),y=(0,o.l)(b,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===d?d:d??(null==(t=k.find((e=>e.props.default)))?void 0:t.props.value)??k[0].props.value;if(null!==f&&!b.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:v,setTabGroupChoices:z}=(0,s.U)(),[N,x]=(0,i.useState)(f),T=[],{blockElementScrollPositionUntilNextRender:w}=(0,p.o5)();if(null!=g){const e=v[g];null!=e&&e!==N&&b.some((t=>t.value===e))&&x(e)}const O=e=>{const t=e.currentTarget,n=T.indexOf(t),a=b[n].value;a!==N&&(w(t),x(a),null!=g&&z(g,String(a)))},R=e=>{var t;let n=null;switch(e.key){case"Enter":O(e);break;case"ArrowRight":{const t=T.indexOf(e.currentTarget)+1;n=T[t]??T[0];break}case"ArrowLeft":{const t=T.indexOf(e.currentTarget)-1;n=T[t]??T[T.length-1];break}}null==(t=n)||t.focus()};return i.createElement("div",{className:(0,l.Z)("tabs-container",u)},i.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":r},h)},b.map((e=>{let{value:t,label:n,attributes:r}=e;return i.createElement("li",(0,a.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:e=>T.push(e),onKeyDown:R,onClick:O},r,{className:(0,l.Z)("tabs__item",c,null==r?void 0:r.className,{"tabs__item--active":N===t})}),n??t)}))),n?(0,i.cloneElement)(k.filter((e=>e.props.value===N))[0],{className:"margin-top--md"}):i.createElement("div",{className:"margin-top--md"},k.map(((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==N})))))}function m(e){const t=(0,r.Z)();return i.createElement(d,(0,a.Z)({key:String(t)},e))}},3583:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var a=n(7462),i=(n(7294),n(3905)),l=n(5488),r=n(5162);const o={title:"Linux"},s=void 0,p={unversionedId:"core-concepts/clients/tunnelers/linux/index",id:"core-concepts/clients/tunnelers/linux/index",title:"Linux",description:"The Ziti Tunneller",source:"@site/docs/core-concepts/clients/tunnelers/linux/index.md",sourceDirName:"core-concepts/clients/tunnelers/linux",slug:"/core-concepts/clients/tunnelers/linux/",permalink:"/docs/core-concepts/clients/tunnelers/linux/",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/core-concepts/clients/tunnelers/linux/index.md",tags:[],version:"current",frontMatter:{title:"Linux"},sidebar:"rootSidebar",previous:{title:"iOS",permalink:"/docs/core-concepts/clients/tunnelers/iOS"},next:{title:"Options and Modes",permalink:"/docs/core-concepts/clients/tunnelers/linux/linux-tunnel-options"}},u={},c=[{value:"The Ziti Tunneller",id:"the-ziti-tunneller",level:2},{value:"Install Linux Package",id:"install-linux-package",level:2},{value:"Installing the DEB",id:"installing-the-deb",level:3},{value:"Installing the RPM",id:"installing-the-rpm",level:3},{value:"Manual Installation",id:"manual-installation",level:2},{value:"Enroll Before You Run",id:"enroll-before-you-run",level:3},{value:"Run the Manually Installed Binary",id:"run-the-manually-installed-binary",level:3},{value:"Run with Docker",id:"run-with-docker",level:2},{value:"Troubleshooting",id:"troubleshooting",level:2}],d={toc:c};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"the-ziti-tunneller"},"The Ziti Tunneller"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel")," is the general purpose tunneller CLI and can also run as a systemd daemon."),(0,i.kt)("p",null,"The purpose of the tunneller is to configure host access. This means all users and all processes on the host will share the same level of access. This is accomplished by configuring the OS to have an on-board OpenZiti DNS nameserver and IP routes for authorized OpenZiti Services."),(0,i.kt)("h2",{id:"install-linux-package"},"Install Linux Package"),(0,i.kt)("p",null,"Linux packages are currently available for the amd64 (x86_64) platform. There are ",(0,i.kt)("a",{parentName:"p",href:"#manual-installation"},"binaries available for ARM"),", and packages are ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/openziti/ziti-tunnel-sdk-c/issues/449"},"coming soon"),"."),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"It is not necessary to manually enroll the identity when using the RPM or DEB package. Just install the token in the identities directory and it will be enrolled when you start the daemon.")),(0,i.kt)("h3",{id:"installing-the-deb"},"Installing the DEB"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Run the script below to import the signing key, add a package source to the list, update sources, and install ziti-edge-tunnel.")),(0,i.kt)(l.Z,{defaultValue:"Jammy",values:[{label:"Ubuntu 22.04",value:"Jammy"},{label:"Ubuntu 20.04",value:"Focal"},{label:"Ubuntu 18.04",value:"Bionic"},{label:"Debian GNU/Linux",value:"Debian"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"Jammy",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sSLf https://raw.githubusercontent.com/openziti/ziti-tunnel-sdk-c/main/package-repos.gpg \\\n| gpg --dearmor \\\n| sudo tee /usr/share/keyrings/openziti.gpg >/dev/null\necho 'deb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-stable jammy main' \\\n| sudo tee /etc/apt/sources.list.d/openziti.list >/dev/null\nsudo apt update\nsudo apt install ziti-edge-tunnel\n"))),(0,i.kt)(r.Z,{value:"Focal",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sSLf https://raw.githubusercontent.com/openziti/ziti-tunnel-sdk-c/main/package-repos.gpg \\\n| gpg --dearmor \\\n| sudo tee /usr/share/keyrings/openziti.gpg >/dev/null\necho 'deb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-stable focal main' \\\n| sudo tee /etc/apt/sources.list.d/openziti.list >/dev/null\nsudo apt update\nsudo apt install ziti-edge-tunnel\n"))),(0,i.kt)(r.Z,{value:"Bionic",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sSLf https://raw.githubusercontent.com/openziti/ziti-tunnel-sdk-c/main/package-repos.gpg \\\n| gpg --dearmor \\\n| sudo tee /usr/share/keyrings/openziti.gpg >/dev/null\necho 'deb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-stable bionic main' \\\n| sudo tee /etc/apt/sources.list.d/openziti.list >/dev/null\nsudo apt update\nsudo apt install ziti-edge-tunnel\n"))),(0,i.kt)(r.Z,{value:"Debian",mdxType:"TabItem"},(0,i.kt)("p",null,"This example subscribes you to the ",(0,i.kt)("inlineCode",{parentName:"p"},"bionic")," repo for the sake of broad compatibility. You could instead subscribe to another Ubuntu release as long as it is not younger than your Debian release."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Debian"),(0,i.kt)("th",{parentName:"tr",align:null},"Ubuntu"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Bookworm"),(0,i.kt)("td",{parentName:"tr",align:null},"Jammy")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Bullseye"),(0,i.kt)("td",{parentName:"tr",align:null},"Focal")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Buster"),(0,i.kt)("td",{parentName:"tr",align:null},"Bionic")))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"curl -sSLf https://raw.githubusercontent.com/openziti/ziti-tunnel-sdk-c/main/package-repos.gpg \\\n| gpg --dearmor \\\n| sudo tee /usr/share/keyrings/openziti.gpg >/dev/null\necho 'deb [signed-by=/usr/share/keyrings/openziti.gpg] https://packages.openziti.org/zitipax-openziti-deb-stable bionic main' \\\n| sudo tee /etc/apt/sources.list.d/openziti.list >/dev/null\nsudo apt update\nsudo apt install ziti-edge-tunnel\n")))),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Install an enroll token JWT file or identity config JSON file in ",(0,i.kt)("inlineCode",{parentName:"li"},"/opt/openziti/etc/identities"),"."),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo systemctl restart ziti-edge-tunnel.service"),". The service needs to be restarted if the contents of the identities directory change.")),(0,i.kt)("h3",{id:"installing-the-rpm"},"Installing the RPM"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a repo file like ",(0,i.kt)("inlineCode",{parentName:"li"},"/etc/yum.repos.d/openziti.repo")," matching the appropriate example below for your OS.")),(0,i.kt)(l.Z,{defaultValue:"RedHat",values:[{label:"Red Hat",value:"RedHat"},{label:"Red Hat 9",value:"RedHat9"},{label:"Fedora",value:"Fedora"},{label:"Amazon Linux",value:"Amazon"}],mdxType:"Tabs"},(0,i.kt)(r.Z,{value:"RedHat",mdxType:"TabItem"},(0,i.kt)("p",null,"Use this repo with var ",(0,i.kt)("inlineCode",{parentName:"p"},"$releasever")," on CentOS 7, Rocky 8, RHEL 7-8."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[OpenZiti]\nname=OpenZiti\nbaseurl=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat$releasever/$basearch\nenabled=1\ngpgcheck=0\ngpgkey=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat$releasever/$basearch/repodata/repomd.xml.key\nrepo_gpgcheck=1\n"))),(0,i.kt)(r.Z,{value:"RedHat9",mdxType:"TabItem"},(0,i.kt)("p",null,"Use the the Red Hat 8 repo until a dedicated Red Hat 9 repo becomes available (",(0,i.kt)("a",{parentName:"p",href:"https://github.com/openziti/ziti-tunnel-sdk-c/issues/517"},"link to issue"),")."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[OpenZiti]\nname=OpenZiti\nbaseurl=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat8/$basearch\nenabled=1\ngpgcheck=0\ngpgkey=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat8/$basearch/repodata/repomd.xml.key\nrepo_gpgcheck=1\n"))),(0,i.kt)(r.Z,{value:"Fedora",mdxType:"TabItem"},(0,i.kt)("p",null,"The Red Hat 8 RPM was tested on Fedora 31-36."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[OpenZiti]\nname=OpenZiti\nbaseurl=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat8/$basearch\nenabled=1\ngpgcheck=0\ngpgkey=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat8/$basearch/repodata/repomd.xml.key\nrepo_gpgcheck=1\n"))),(0,i.kt)(r.Z,{value:"Amazon",mdxType:"TabItem"},(0,i.kt)("p",null,"The Red Hat 7 RPM was tested on Amazon Linux."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ini"},"[OpenZiti]\nname=OpenZiti\nbaseurl=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat7/$basearch\nenabled=1\ngpgcheck=0\ngpgkey=https://packages.openziti.org/zitipax-openziti-rpm-stable/redhat7/$basearch/repodata/repomd.xml.key\nrepo_gpgcheck=1\n")))),(0,i.kt)("ol",{start:2},(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo yum update")," to refresh your repodata cache. Optionally, you may wish to also install all available updates."),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo yum install ziti-edge-tunnel")," to install the RPM."),(0,i.kt)("li",{parentName:"ol"},"Install an enroll token JWT file or identity config JSON file in ",(0,i.kt)("inlineCode",{parentName:"li"},"/opt/openziti/etc/identities"),"."),(0,i.kt)("li",{parentName:"ol"},"Run ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo systemctl start ziti-edge-tunnel.service"),". The service needs to be restarted if the contents of the identities directory change.")),(0,i.kt)("h2",{id:"manual-installation"},"Manual Installation"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/openziti/ziti-tunnel-sdk-c/releases/latest/"},"The latest binary release")," of ",(0,i.kt)("inlineCode",{parentName:"p"},"ziti-edge-tunnel")," is distributed as an executable for amd64, arm, arm64 architectures. The upgrade procedure is identical to the installation procedure."),(0,i.kt)("p",null,"You'll need to install the ",(0,i.kt)("inlineCode",{parentName:"p"},"wget")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"unzip")," commands to use this example."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'wget -q "https://github.com/openziti/ziti-tunnel-sdk-c/releases/latest/download/ziti-edge-tunnel-Linux_$(uname -p).zip" \\\n  && unzip ./ziti-edge-tunnel-Linux_$(uname -p).zip \\\n  && rm ./ziti-edge-tunnel-Linux_$(uname -p).zip \\\n  && chmod -c +x ./ziti-edge-tunnel \\\n  && ./ziti-edge-tunnel version\n')),(0,i.kt)("h3",{id:"enroll-before-you-run"},"Enroll Before You Run"),(0,i.kt)("p",null,"You will need the token file or its contents to enroll. Enrollment is the act of exchanging the token for an identity that is to be permanently installed in the filesystem."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/docs/core-concepts/identities/enrolling"},"Learn more about enrolling"),"."),(0,i.kt)("h3",{id:"run-the-manually-installed-binary"},"Run the Manually Installed Binary"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ziti-edge-tunnel run \\\n  --identity-dir /opt/openziti/etc/identities\n")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"./linux-tunnel-options"},"Learn more about tunneler options and modes"),"."),(0,i.kt)("h2",{id:"run-with-docker"},"Run with Docker"),(0,i.kt)("p",null,"Please reference ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/openziti/ziti-tunnel-sdk-c/tree/main/docker#readme"},"the Docker README")," for guidance and examples!"),(0,i.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,i.kt)("p",null,"Please refer to ",(0,i.kt)("a",{parentName:"p",href:"./linux-tunnel-troubleshooting"},"the troubleshooting guide")))}m.isMDXComponent=!0}}]);