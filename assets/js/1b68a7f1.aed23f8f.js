"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[1698],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(n),m=o,f=u["".concat(c,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},20308:(e,t,n)=>{n.d(t,{ZP:()=>i});var r=n(87462),o=(n(67294),n(3905));const a={toc:[]};function i(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"If you are building a new application you have a unique opportunity to choose to use one of the Ziti SDKs and to create a\ntruly zero trust application from the start! A Ziti Edge SDK enables your application to discover and provide or connect to Ziti services directly without an agent or proxy. The SDKs use ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/developer/api/#edge-client-api"},"the Edge Client API")," provided by the controller to authenticate and discover routers and services. Then, the SDK connects to the most responsive router and begins hosting or connecting to the Ziti service."))}i.isMDXComponent=!0},37665:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>u});var r=n(87462),o=(n(67294),n(3905)),a=n(97494),i=n(20308);const l={title:"Choosing a Client",id:"choose",sidebar_position:0},c=void 0,s={unversionedId:"learn/core-concepts/clients/choose",id:"learn/core-concepts/clients/choose",title:"Choosing a Client",description:"",source:"@site/docs/learn/core-concepts/clients/choose.mdx",sourceDirName:"learn/core-concepts/clients",slug:"/learn/core-concepts/clients/choose",permalink:"/docs/learn/core-concepts/clients/choose",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/learn/core-concepts/clients/choose.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Choosing a Client",id:"choose",sidebar_position:0},sidebar:"docsSidebar",previous:{title:"Core Concepts",permalink:"/docs/learn/core-concepts/"},next:{title:"Endpoint  Initialization",permalink:"/docs/learn/core-concepts/clients/process-sequences/EndpointInitialization"}},p={},u=[{value:"Tunnelers",id:"tunnelers",level:2},{value:"SDK",id:"sdk",level:2}],d={toc:u};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Once you have a Ziti Network - you are going to require a Ziti-aware client in order to access the network. There are\ntwo types of clients and depending on your needs you'll choose to either use a tunneler or you will use an SDK to\nsecurely access the Ziti Network."),(0,o.kt)("p",null,"Choosing which type of client you will use to connect to a Ziti Network is a straightforward process and comes down to a\nsingle question. If you are you installing Ziti in front of an existing application which has already been developed and\ndeployed you need to use a ",(0,o.kt)("a",{parentName:"p",href:"../../../reference/tunnelers/"},"tunneler"),".  If you are developing a new product, starting from scratch and\nyou want to take advantage of a fully zero trust solution you will probably want to use an SDK."),(0,o.kt)("h2",{id:"tunnelers"},"Tunnelers"),(0,o.kt)(a.ZP,{mdxType:"TunnelerOverviewMd"}),(0,o.kt)("p",null,"Read more on using ",(0,o.kt)("a",{parentName:"p",href:"../../../reference/tunnelers/"},"tunnelers here")),(0,o.kt)("h2",{id:"sdk"},"SDK"),(0,o.kt)(i.ZP,{mdxType:"SdkQuickInfoMd"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/reference/developer/sdk/"},"Explore Edge SDK Resources")))}m.isMDXComponent=!0},97494:(e,t,n)=>{n.d(t,{ZP:()=>c});var r=n(87462),o=(n(67294),n(3905));const a={toc:[]};function i(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"OS"),(0,o.kt)("th",{parentName:"tr",align:null},"Links"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Windows"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/reference/tunnelers/windows"},"Reference")," ","|"," ",(0,o.kt)("a",{parentName:"td",href:"https://github.com/openziti/desktop-edge-win/releases/latest"},"GitHub release"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"macOS"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/reference/tunnelers/macos"},"Reference"),"   ","|"," ",(0,o.kt)("a",{parentName:"td",href:"https://apps.apple.com/app/id1460484572"},"App Store"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Linux"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/reference/tunnelers/linux/#install-linux-package"},"Reference"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Docker, Kubernetes"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/reference/tunnelers/linux/container/"},"Reference"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"iOS"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/reference/tunnelers/iOS"},"Reference"),"    ","|"," ",(0,o.kt)("a",{parentName:"td",href:"https://apps.apple.com/app/id1460484353"},"App Store"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"Android"),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/reference/tunnelers/android"},"Reference")," ","|"," ",(0,o.kt)("a",{parentName:"td",href:"https://play.google.com/store/apps/details?id=org.openziti.mobile"},"Play Store"))))))}i.isMDXComponent=!0;const l={toc:[]};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"An OpenZiti Tunneler is purpose-built software designed to connect applications which are not Ziti-aware to the OpenZiti Network."),(0,o.kt)(i,{mdxType:"TunnelerDlMd"}))}c.isMDXComponent=!0}}]);