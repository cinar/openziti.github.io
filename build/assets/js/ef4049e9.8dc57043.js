"use strict";(self.webpackChunkopen_ziti=self.webpackChunkopen_ziti||[]).push([[7682],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),f=l(r),d=o,m=f["".concat(s,".").concat(d)]||f[d]||p[d]||a;return r?n.createElement(m,c(c({ref:t},u),{},{components:r})):n.createElement(m,c({ref:t},u))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var l=2;l<a;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3394:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={},c=void 0,i={unversionedId:"api/rest/create-ca-json",id:"api/rest/create-ca-json",title:"create-ca-json",description:"Verb: POST",source:"@site/docs/api/rest/create-ca-json.md",sourceDirName:"api/rest",slug:"/api/rest/create-ca-json",permalink:"/docusaurus/docs/api/rest/create-ca-json",draft:!1,editUrl:"https://github.com/openziti/ziti-doc/tree/main/docusaurus/docs/api/rest/create-ca-json.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Ziti Controlller REST API",permalink:"/docusaurus/docs/api/rest/"},next:{title:"create-service-rest",permalink:"/docusaurus/docs/api/rest/create-service-rest"}},s={},l=[],u={toc:l};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Verb: POST"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'name:\n  The name of the CA to create\nisAutoCaEnrollmentEnabled:\n  controls if the CA can be used for automatic enrollment\nisOttCaEnrollmentEnabled:\n  controls if the CA be used for one time token enrollment\nisAuthEnabled:\n  controls if the CA is enabled for authentication. Devices can enroll but not connect if set to false\ncertPem:\n  the CA to upload in PEM format\nbody:\n{\n  "name": "${string}",\n  "isAutoCaEnrollmentEnabled": ${true|false},\n  "isOttCaEnrollmentEnabled": ${true|false},\n  "isAuthEnabled": ${true|false},\n  "certPem": "${string}"\n}\n')))}p.isMDXComponent=!0}}]);